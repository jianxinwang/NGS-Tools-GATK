.\" Automatically generated by Pod::Man 2.28 (Pod::Simple 3.28)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{
.    if \nF \{
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "GATK 1"
.TH GATK 1 "2018-03-19" "perl v5.20.2" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
GATK.pl
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
\&\fB\s-1GATK\s0.pl\fR Run the Genome Analysis Toolkit pipeline for human samples.
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
\&\fB\s-1GATK\s0.pl\fR [options] <\-\-config> <\-\-run_id> <\-\-output_dir> <\-\-account> <\-\-data_type> <\-\-assembly> <\-\-partition>
.PP
Arguments:
.PP
.Vb 8
\&        \-\-config                A YAML file containing BAM files and sample names for processing
\&        \-\-run_id                A name/ID for this GATK run, suggest to use the project, dataset or cohort name
\&        \-\-output_dir            Output directory (for example: /scratch2/user/your_user_name).
\&        \-\-account               Group name of the user belongs to
\&        \-\-data_type             Indicate if the input sequence data are from whole genome sequencing or whole exome sequencying. valid values are "wgs", "wes" or "rna\-seq"
\&        \-\-assembly              Assembly version for the ref genome. Use \*(Aqb37\*(Aq or \*(AqGRCh38\*(Aq. Default to b37
\&        \-\-partition             Valide values are "general\-compute", "industry". Default to "general\-compute". 
\&                                If set to "industry", qos and cluster will also be set to "industry"
.Ve
.PP
Options:
.PP
.Vb 10
\&        \-\-cluster               Cluster name, valid values are \*(Aqub\-hpc\*(Aq, \*(Aqindustry\*(Aq. Default to \*(Aqub\-hpc\*(Aq
\&        \-\-qos                   Quality of Server, limits or priority boost. Valid values are "supporters", 
\&                                "general\-compute", "industry". Default to "general\-compute". 
\&                                Use "industry" if you are submitting jobs to industry cluster
\&        \-\-email                 Used to send Slurm run status. Defaul is "username@buffalo.edu"                       
\&        \-\-sendemail             Send email after slurm job finishes. Y|N, default is No. Will flood your mailbox if set to \*(AqY\*(Aq
\&        \-\-gatk_version          Version of the GATK program, e.g. "3.3.0", "3.6.0", etc. default "3.8.0"
\&        \-\-ref                   Path for reference genome fasta file (defauld b37)
\&        \-\-create_recalibration_table            Perform CreateRecalibrationTable (default:Y)
\&        \-\-merge_raw_vcf         Perfrom MergeRawVcf (default:Y)
\&        \-\-variant_recalibrator          Perfrom VariantRecalibrator (default:Y)
\&        \-\-apply_recalibration           Perfrom ApplyRecalibration (default:Y)
\&        \-\-create_recalibrated_bam               Default is \*(AqY\*(Aq, yes
\&        \-\-split_bam_by_chr              Default is \*(AqY\*(Aq, yes
\&        \-\-run_haplotype_caller          Default is \*(AqY\*(Aq, yes
\&        \-\-joint_calling_genotypes               Default is \*(AqN\*(Aq, no, because users may need to run several batches of samples before making the final genotype calling
\&        \-\-cat_variants          Defautl is \*(AqN\*(Aq, since default value for \-\-joint_calling_genotypes is set to \*(AqN\*(Aq. Set to \*(AqY\*(Aq if need to perform this step
\&        \-\-variant_recalibrator          Default is \*(AqN\*(Aq. Set to \*(AqY\*(Aq if need to perform this step
\&        \-\-apply_recalibration           Default is \*(AqN\*(Aq. Set to \*(AqY\*(Aq if need to perform this step
\&        \-\-merge_hc_bams         Merge bam files created by HaplotypeCaller for use with IGV. Y|N, Default to No.
.Ve
.PP
Examples:
.PP
\&\s-1GATK\s0.pl \-\-config config.yaml \-\-output_dir /gpfs/scratch/user/gatk \-\-gatk_version 3.8.0 \-\-data_type wgs \-\-run_id my_project_name \-\-assembly b37 \-\-account your_group name \-\-partition general\-compute|industry
.SH "AUTHOR"
.IX Header "AUTHOR"
Jianxin Wang
.PP
Center for Computational Research, University at Buffalo
.SH "SEE ALSO"
.IX Header "SEE ALSO"
